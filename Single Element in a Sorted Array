class Solution:
    def singleNonDuplicate(self, nums: List[int]) -> int:
        return self.binarySearch(nums, 0, len(nums)-1)
        
    def binarySearch(self, nums:List[int], start: int, end: int) -> int:
        if start > end:
            return None
        if start == end:
            return nums[start]
        
        mid = start + (end - start) // 2
        
        if mid % 2 == 0:
            
            if nums[mid] == nums[mid + 1]:
                return self.binarySearch(nums, mid + 2, end)
            else:
                return self.binarySearch(nums, start, mid)
            
        else:
            
            if nums[mid] == nums[mid - 1]:
                return self.binarySearch(nums, mid + 1, end)
            else:
                return self.binarySearch(nums, start, mid - 1)
